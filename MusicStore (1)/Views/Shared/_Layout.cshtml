@using Microsoft.AspNetCore.Identity;
@inject SignInManager<ApplicationUser> signInManager;
@inject UserManager<ApplicationUser> UserManager;



<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
</head>
<body>

    <div style="display: flex; gap: 100px;">
        <h1>
            ASP.NET MVC MUSIC STORE
        </h1>

        <ul>
            @if (signInManager.IsSignedIn(User))
            {
                <li>
                    <a asp-action="Index" asp-controller="Store">Store</a>
                </li>
            }
        </ul>

        <ul id="navlist">
            
             
            @if(User.IsInRole("Admin"))
            {
                <li>
                    <a asp-action="ListRoles" asp-controller="Admin">Manage Roles</a>
                </li>
            }

            @if (User.IsInRole("Manager"))
            {
                <li>
                    <a asp-action="Index" asp-controller="StoreAdministrator">Manage Albums</a>
                </li>
            }

            @if (signInManager.IsSignedIn(User))
            {
                <li>
                    <a asp-action="ManageClaims" asp-controller="Admin" asp-route-userId="@UserManager.GetUserId(User)">Manage User Claims</a>
                </li>
            }


            
            @if (signInManager.IsSignedIn(User))
            {
                <li>
                    <form asp-action="LogOut" asp-controller="Account">
                        <div>
                            <button type="submit">Log Out @User.Identity.Name</button>
                        </div>
                    </form>
                </li>
            }
            else
            {
                <li>
                    <a asp-action="LogIn" asp-controller="Account">Log in</a>
                </li>

                <li>
                    <a asp-action="Register" asp-controller="Account">Register</a>
                </li>

                
            }
        </ul>


    </div>

    

    @RenderBody()

</body>
</html>
